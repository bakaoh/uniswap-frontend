{"version":3,"sources":["components/ContextualInfo/index.js","assets/images/plus-blue.svg","pages/Pool/AddLiquidity.js"],"names":["SummaryWrapper","styled","div","error","theme","salmonRed","doveGray","Details","concreteGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","ColoredDropup","isError","highSlippageWarning","rest","ColoredDropdown","ContextualInfo","state","showDetails","this","props","renderTransactionDetails","openDetailsText","closeDetailsText","contextualInfo","onClick","setState","prevState","renderDetails","Component","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","strokeLinecap","_ref","svgRef","title","width","height","viewBox","fill","ref","ForwardRef","forwardRef","INPUT","OUTPUT","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","span","NewExchangeWarning","NewExchangeWarningText","LastSummaryText","DownArrowBackground","SummaryPanel","flexColumnNoWrap","ExchangeRateWrapper","ExchangeRate","Flex","ColoredWrappedPlus","active","chaliceGray","calculateSlippageBounds","value","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","initialAddLiquidityState","inputValue","outputValue","lastEditedField","outputCurrency","addLiquidityStateReducer","action","type","payload","field","getMarketRate","reserveETH","reserveToken","decimals","inputDecimals","outputDecimals","invert","factor","pow","getExchangeRate","AddLiquidity","t","useTranslation","useWeb3Context","library","account","useReducer","addLiquidityState","dispatchAddLiquidityState","inputCurrency","useState","inputValueParsed","setInputValueParsed","outputValueParsed","setOutputValueParsed","inputError","setInputError","outputError","setOutputError","useTokenDetails","symbol","exchangeAddress","exchangeContract","useExchangeContract","totalPoolTokens","setTotalPoolTokens","fetchPoolTokens","useCallback","totalSupply","then","useEffect","on","removeListener","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","useExchangeReserves","isNewExchange","isZero","poolTokenPercentage","undefined","ethShare","tokenShare","liquidityMinted","inputBalance","outputBalance","ethPerLiquidityToken","tokenPerLiquidityToken","outputValueMax","liquidityTokensMin","marketRate","useMemo","marketRateInverted","ReactGA","event","category","b","text","amountFormatter","Math","min","addTransaction","useTransactionAdder","a","deadline","ceil","Date","now","estimate","addLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","formatBalance","parsedInputValue","parseUnits","parsedOutputValue","parsedValue","lte","gte","Error","currencyAmount","allowance","useAddressAllowance","showUnlock","setShowUnlock","isActive","isValid","allBalances","useFetchAllBalances","role","aria-label","CurrencyInputPanel","extraText","onValueChange","selectedTokenAddress","errorMessage","disableTokenSelect","OversizedPanel","alt","description","onCurrencySelected","hideBottom","renderSummary","disabled"],"mappings":"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","file":"static/js/8.8cc6031e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() =>\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M1 6H6M11 6L6 6M6 1V6M6 6L6 11\",\n  stroke: \"#2F80ED\",\n  strokeLinecap: \"round\"\n});\n\nvar SvgPlusBlue = function SvgPlusBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-blue.e8021e51.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useReducer, useState, useCallback, useEffect, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport { ReactComponent as Plus } from '../../assets/images/plus-blue.svg'\n\nimport { useExchangeContract } from '../../hooks'\nimport { amountFormatter, calculateGasMargin } from '../../utils'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst NewExchangeWarning = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  margin-bottom: 2rem;\n  border: 1px solid rgba($pizazz-orange, 0.4);\n  background-color: rgba($pizazz-orange, 0.1);\n  border-radius: 1rem;\n`\n\nconst NewExchangeWarningText = styled.div`\n  font-size: 0.75rem;\n  line-height: 1rem;\n  text-align: center;\n\n  :first-child {\n    padding-bottom: 0.3rem;\n    font-weight: 500;\n  }\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nconst WrappedPlus = ({ isError, highSlippageWarning, ...rest }) => <Plus {...rest} />\nconst ColoredWrappedPlus = styled(WrappedPlus)`\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  path {\n    stroke: ${({ active, theme }) => (active ? theme.royalBlue : theme.chaliceGray)};\n  }\n`\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nconst initialAddLiquidityState = {\n  inputValue: '',\n  outputValue: '',\n  lastEditedField: INPUT,\n  outputCurrency: ''\n}\n\nfunction addLiquidityStateReducer(state, action) {\n  switch (action.type) {\n    case 'SELECT_CURRENCY': {\n      return {\n        ...state,\n        outputCurrency: action.payload\n      }\n    }\n    case 'UPDATE_VALUE': {\n      const { inputValue, outputValue } = state\n      const { field, value } = action.payload\n      return {\n        ...state,\n        inputValue: field === INPUT ? value : inputValue,\n        outputValue: field === OUTPUT ? value : outputValue,\n        lastEditedField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT_VALUE': {\n      const { inputValue, outputValue } = state\n      const { field, value } = action.payload\n      return {\n        ...state,\n        inputValue: field === INPUT ? value : inputValue,\n        outputValue: field === OUTPUT ? value : outputValue\n      }\n    }\n    default: {\n      return initialAddLiquidityState\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nexport default function AddLiquidity() {\n  const { t } = useTranslation()\n  const { library, active, account } = useWeb3Context()\n\n  const [addLiquidityState, dispatchAddLiquidityState] = useReducer(addLiquidityStateReducer, initialAddLiquidityState)\n  const { inputValue, outputValue, lastEditedField, outputCurrency } = addLiquidityState\n  const inputCurrency = 'ETH'\n\n  const [inputValueParsed, setInputValueParsed] = useState()\n  const [outputValueParsed, setOutputValueParsed] = useState()\n  const [inputError, setInputError] = useState()\n  const [outputError, setOutputError] = useState()\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n  const exchangeContract = useExchangeContract(exchangeAddress)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const fetchPoolTokens = useCallback(() => {\n    if (exchangeContract) {\n      exchangeContract.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchangeContract])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  const { reserveETH, reserveToken } = useExchangeReserves(outputCurrency)\n  const isNewExchange = !!(reserveETH && reserveToken && reserveETH.isZero() && reserveToken.isZero())\n\n  // 18 decimals\n  const poolTokenPercentage =\n    poolTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ethShare =\n    exchangeETHBalance && poolTokenPercentage\n      ? exchangeETHBalance\n          .mul(poolTokenPercentage)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n  const tokenShare =\n    exchangeTokenBalance && poolTokenPercentage\n      ? exchangeTokenBalance\n          .mul(poolTokenPercentage)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n\n  const liquidityMinted = isNewExchange\n    ? inputValueParsed\n    : totalPoolTokens && inputValueParsed && exchangeETHBalance && !exchangeETHBalance.isZero()\n    ? totalPoolTokens.mul(inputValueParsed).div(exchangeETHBalance)\n    : undefined\n\n  // user balances\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n\n  const ethPerLiquidityToken =\n    exchangeETHBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const tokenPerLiquidityToken =\n    exchangeTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n\n  const outputValueMax = outputValueParsed && calculateSlippageBounds(outputValueParsed).maximum\n  const liquidityTokensMin = liquidityMinted && calculateSlippageBounds(liquidityMinted).minimum\n\n  const marketRate = useMemo(() => {\n    return getMarketRate(reserveETH, reserveToken, decimals)\n  }, [reserveETH, reserveToken, decimals])\n  const marketRateInverted = useMemo(() => {\n    return getMarketRate(reserveETH, reserveToken, decimals, true)\n  }, [reserveETH, reserveToken, decimals])\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    const b = text => <BlueSpan>{text}</BlueSpan>\n\n    if (isNewExchange) {\n      return (\n        <div>\n          <div>\n            {t('youAreAdding')} {b(`${inputValue} ETH`)} {t('and')} {b(`${outputValue} ${symbol}`)} {t('intoPool')}\n          </div>\n          <LastSummaryText>\n            {t('youAreSettingExRate')}{' '}\n            {b(\n              `1 ETH = ${amountFormatter(\n                getMarketRate(inputValueParsed, outputValueParsed, decimals),\n                18,\n                4,\n                false\n              )} ${symbol}`\n            )}\n            .\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('youWillMint')} {b(`${inputValue}`)} {t('liquidityTokens')}\n          </LastSummaryText>\n          <LastSummaryText>{t('totalSupplyIs0')}</LastSummaryText>\n        </div>\n      )\n    } else {\n      return (\n        <>\n          <div>\n            {t('youAreAdding')} {b(`${amountFormatter(inputValueParsed, 18, 4)} ETH`)} {t('and')} {'at most'}{' '}\n            {b(`${amountFormatter(outputValueMax, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('intoPool')}\n          </div>\n          <LastSummaryText>\n            {t('youWillMint')} {b(amountFormatter(liquidityMinted, 18, 4))} {t('liquidityTokens')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('tokenWorth')} {b(amountFormatter(ethPerLiquidityToken, 18, 4))} ETH {t('and')}{' '}\n            {b(amountFormatter(tokenPerLiquidityToken, decimals, Math.min(decimals, 4)))} {symbol}\n          </LastSummaryText>\n        </>\n      )\n    }\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError || outputError) {\n      contextualInfo = inputError || outputError\n      isError = true\n    } else if (!inputCurrency || !outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!inputValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAddLiquidity() {\n    ReactGA.event({\n      category: 'Pool',\n      action: 'AddLiquidity'\n    })\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchangeContract.estimate.addLiquidity(\n      isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\n      isNewExchange ? outputValueParsed : outputValueMax,\n      deadline,\n      {\n        value: inputValueParsed\n      }\n    )\n\n    const gasLimit = calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n\n    exchangeContract\n      .addLiquidity(\n        isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\n        isNewExchange ? outputValueParsed : outputValueMax,\n        deadline,\n        {\n          value: inputValueParsed,\n          gasLimit\n        }\n      )\n      .then(response => {\n        addTransaction(response)\n      })\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  useEffect(() => {\n    if (isNewExchange) {\n      if (inputValue) {\n        const parsedInputValue = ethers.utils.parseUnits(inputValue, 18)\n        setInputValueParsed(parsedInputValue)\n      }\n\n      if (outputValue) {\n        const parsedOutputValue = ethers.utils.parseUnits(outputValue, decimals)\n        setOutputValueParsed(parsedOutputValue)\n      }\n    }\n  }, [decimals, inputValue, isNewExchange, outputValue])\n\n  // parse input value\n  useEffect(() => {\n    if (\n      isNewExchange === false &&\n      inputValue &&\n      marketRate &&\n      lastEditedField === INPUT &&\n      (decimals || decimals === 0)\n    ) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(inputValue, 18)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        }\n\n        setInputValueParsed(parsedValue)\n\n        const currencyAmount = marketRate\n          .mul(parsedValue)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18 - decimals)))\n\n        setOutputValueParsed(currencyAmount)\n        dispatchAddLiquidityState({\n          type: 'UPDATE_DEPENDENT_VALUE',\n          payload: { field: OUTPUT, value: amountFormatter(currencyAmount, decimals, Math.min(decimals, 4), false) }\n        })\n\n        return () => {\n          setOutputError()\n          setInputValueParsed()\n          setOutputValueParsed()\n          dispatchAddLiquidityState({\n            type: 'UPDATE_DEPENDENT_VALUE',\n            payload: { field: OUTPUT, value: '' }\n          })\n        }\n      } catch {\n        setOutputError(t('inputNotValid'))\n      }\n    }\n  }, [inputValue, isNewExchange, lastEditedField, marketRate, decimals, t])\n\n  // parse output value\n  useEffect(() => {\n    if (\n      isNewExchange === false &&\n      outputValue &&\n      marketRateInverted &&\n      lastEditedField === OUTPUT &&\n      (decimals || decimals === 0)\n    ) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(outputValue, decimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        }\n\n        setOutputValueParsed(parsedValue)\n\n        const currencyAmount = marketRateInverted\n          .mul(parsedValue)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(decimals)))\n\n        setInputValueParsed(currencyAmount)\n        dispatchAddLiquidityState({\n          type: 'UPDATE_DEPENDENT_VALUE',\n          payload: { field: INPUT, value: amountFormatter(currencyAmount, 18, 4, false) }\n        })\n\n        return () => {\n          setInputError()\n          setOutputValueParsed()\n          setInputValueParsed()\n          dispatchAddLiquidityState({\n            type: 'UPDATE_DEPENDENT_VALUE',\n            payload: { field: INPUT, value: '' }\n          })\n        }\n      } catch {\n        setInputError(t('inputNotValid'))\n      }\n    }\n  }, [outputValue, isNewExchange, lastEditedField, marketRateInverted, decimals, t])\n\n  // input validation\n  useEffect(() => {\n    if (inputValueParsed && inputBalance) {\n      if (inputValueParsed.gt(inputBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n\n    if (outputValueMax && outputBalance) {\n      if (outputValueMax.gt(outputBalance)) {\n        setOutputError(t('insufficientBalance'))\n      } else {\n        setOutputError(null)\n      }\n    }\n  }, [inputValueParsed, inputBalance, outputValueMax, outputBalance, t])\n\n  const allowance = useAddressAllowance(account, outputCurrency, exchangeAddress)\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    if (outputValueParsed && allowance) {\n      if (allowance.lt(outputValueParsed)) {\n        setOutputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      }\n      return () => {\n        setOutputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [outputValueParsed, allowance, t])\n\n  const isActive = active && account\n  const isValid = (inputError === null || outputError === null) && !showUnlock\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      {isNewExchange ? (\n        <NewExchangeWarning>\n          <NewExchangeWarningText>\n            <span role=\"img\" aria-label=\"first-liquidity\">\n              🚰\n            </span>{' '}\n            {t('firstLiquidity')}\n          </NewExchangeWarningText>\n          <NewExchangeWarningText>{t('initialExchangeRate', { symbol })}</NewExchangeWarningText>\n        </NewExchangeWarning>\n      ) : null}\n\n      <CurrencyInputPanel\n        title={t('deposit')}\n        allBalances={allBalances}\n        extraText={inputBalance && formatBalance(amountFormatter(inputBalance, 18, 4))}\n        onValueChange={inputValue => {\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: inputValue, field: INPUT } })\n        }}\n        selectedTokenAddress=\"ETH\"\n        value={inputValue}\n        errorMessage={inputError}\n        disableTokenSelect\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <ColoredWrappedPlus active={isActive} alt=\"plus\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('deposit')}\n        allBalances={allBalances}\n        description={isNewExchange ? '' : outputValue ? `(${t('estimated')})` : ''}\n        extraText={outputBalance && formatBalance(amountFormatter(outputBalance, decimals, Math.min(decimals, 4)))}\n        selectedTokenAddress={outputCurrency}\n        onCurrencySelected={outputCurrency => {\n          dispatchAddLiquidityState({ type: 'SELECT_CURRENCY', payload: outputCurrency })\n        }}\n        onValueChange={outputValue => {\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        value={outputValue}\n        showUnlock={showUnlock}\n        errorMessage={outputError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            <span>{marketRate ? `1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}` : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            <span>\n              {exchangeETHBalance && exchangeTokenBalance\n                ? `${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\n                    exchangeTokenBalance,\n                    decimals,\n                    Math.min(4, decimals)\n                  )} ${symbol}`\n                : ' - '}\n            </span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({exchangeETHBalance && amountFormatter(poolTokenPercentage, 16, 2)}%)\n            </ExchangeRate>\n            <span>\n              {ethShare && tokenShare\n                ? `${amountFormatter(ethShare, 18, 4)} ETH + ${amountFormatter(\n                    tokenShare,\n                    decimals,\n                    Math.min(4, decimals)\n                  )} ${symbol}`\n                : ' - '}\n            </span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onAddLiquidity}>\n          {t('addLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"],"sourceRoot":""}